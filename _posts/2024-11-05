---
title: "first blog"
date: 2024-11-05
---

Introduction
Hello, world! Welcome to my blog. This will be a space where I share my experiences and insights as I explore the tech world. From coding tutorials to new tools and technologies, this blog will document my learning process and hopefully help others along the way.

In this first post, I’ll be talking about how I got started with GitHub Pages and why I chose it as a platform for my blog.

Why GitHub Pages?
When I decided to start blogging, I wanted a simple and free way to host my content. GitHub Pages seemed like the perfect fit. It’s free, easy to set up, and integrates well with GitHub repositories—something I’m already using for version control in my projects. I also like the idea of using Markdown and Jekyll (a static site generator) to format my blog posts. It’s minimal, fast, and doesn’t require a complex backend.

Plus, it gives me the chance to practice working with Git and GitHub—skills I know will be useful as I progress in my tech journey.

Getting Started with GitHub Pages
Here’s a quick rundown of how I set up my GitHub Pages site:

Create a new repository: I created a new repository on GitHub with the name my-tech-journey.github.io. This is the standard format for GitHub Pages websites.

Choose a theme: GitHub Pages makes it easy to choose a Jekyll theme from their available options. I selected a simple, clean theme to get started. You can also customize the design later by editing the /_config.yml file.

Write my first post: I created my first blog post using Markdown in a .md file and pushed it to my GitHub repository.

Publish the site: Once I pushed my changes, GitHub automatically built and deployed the site. I now have a live blog that anyone can visit!

Challenges and Learnings
Getting GitHub Pages set up was relatively straightforward, but I did face a few challenges along the way:

Learning Markdown: Markdown is a lightweight markup language that I’m using to write my posts. It’s simple but powerful. I had to spend some time learning the syntax, especially for formatting headers, lists, and links.

Customizing the theme: While the default theme was nice, I wanted to make a few customizations to give my blog a more personal feel. This involved editing some CSS and understanding how Jekyll works under the hood.

GitHub Basics: If you’re new to GitHub, the concepts of commits, branches, and pull requests might feel a bit overwhelming at first. But after a few tries, I got the hang of it and realized how useful GitHub is for version control and collaboration.

Next Steps
Now that my blog is live, I’m excited to share more about my tech journey. In future posts, I’ll cover topics such as:

Learning to code with Python
Exploring web development with HTML, CSS, and JavaScript
Using version control with Git and GitHub
Working with APIs and cloud services
I also want to experiment with adding interactive features to the blog using JavaScript and maybe even host some small projects on the site. The possibilities are endless!

Conclusion
I’m excited about the future of this blog and look forward to documenting my progress in the tech world. GitHub Pages is a simple yet powerful tool that has allowed me to create a professional-looking blog without much overhead. I encourage anyone who’s interested in tech and web development to give it a try.

Thanks for reading, and stay tuned for more posts!

